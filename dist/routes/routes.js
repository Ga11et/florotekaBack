"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const update_1 = require("./../controllers/update");
const validations_1 = require("./../validations/validations");
const get_1 = require("./../controllers/get");
const post_1 = require("../controllers/post");
const authMiddleware_1 = __importDefault(require("../middlewares/authMiddleware"));
const validations_2 = require("../validations/validations");
const delete_1 = require("../controllers/delete");
const Router = require('express').Router;
const router = new Router();
router.get('/', (req, res) => {
    res.setHeader('Access-Control-Allow-Origin', '*');
    res.json('main');
});
router.get('/plants', get_1.getControllers.getPlants);
router.get('/posts', get_1.getControllers.getPosts);
router.get('/galery', get_1.getControllers.getPhotos);
router.get('/refresh', get_1.getControllers.getRefresh);
router.post('/login', validations_1.postAuthValidator, post_1.postControllers.postAuth);
router.post('/plants', authMiddleware_1.default, validations_2.postPlantValidator, post_1.postControllers.postPlant);
router.post('/beforeAfter', authMiddleware_1.default, validations_2.postBeforeAfterValidator, post_1.postControllers.postBeforeAfter);
router.post('/technologies', authMiddleware_1.default, validations_2.postTechnologiesValidator, post_1.postControllers.postTechnologies);
router.post('/things', authMiddleware_1.default, validations_2.postThingsValidator, post_1.postControllers.postThings);
router.post('/galery', authMiddleware_1.default, validations_1.postPhotoValidator, post_1.postControllers.postPhoto);
router.post('/studyProject', authMiddleware_1.default, validations_2.postTechnologiesValidator, post_1.postControllers.postStudyProject);
router.post('/scienceActivity', authMiddleware_1.default, validations_1.postScienceActivityValidator, post_1.postControllers.postScienceActivity);
router.delete('/plants', authMiddleware_1.default, delete_1.deleteControllers.deletePlant);
router.delete('/posts', authMiddleware_1.default, delete_1.deleteControllers.post);
router.put('/plants', authMiddleware_1.default, update_1.updateControllers.updatePlant);
exports.default = router;
